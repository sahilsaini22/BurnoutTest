[{"C:\\Users\\sahil\\Projects\\burnout\\test\\client\\src\\index.js":"1","C:\\Users\\sahil\\Projects\\burnout\\test\\client\\src\\reportWebVitals.js":"2","C:\\Users\\sahil\\Projects\\burnout\\test\\client\\src\\App.js":"3","C:\\Users\\sahil\\Projects\\burnout\\test\\client\\src\\store.js":"4","C:\\Users\\sahil\\Projects\\burnout\\test\\client\\src\\components\\AppNavbar.js":"5","C:\\Users\\sahil\\Projects\\burnout\\test\\client\\src\\components\\PlantList.js":"6","C:\\Users\\sahil\\Projects\\burnout\\test\\client\\src\\components\\HomeData.js":"7","C:\\Users\\sahil\\Projects\\burnout\\test\\client\\src\\components\\PlantModal.js":"8","C:\\Users\\sahil\\Projects\\burnout\\test\\client\\src\\actions\\plantActions.js":"9","C:\\Users\\sahil\\Projects\\burnout\\test\\client\\src\\reducers\\index.js":"10","C:\\Users\\sahil\\Projects\\burnout\\test\\client\\src\\actions\\types.js":"11","C:\\Users\\sahil\\Projects\\burnout\\test\\client\\src\\reducers\\plantReducer.js":"12","C:\\Users\\sahil\\Projects\\burnout\\test\\client\\src\\reducers\\questionReducer.js":"13","C:\\Users\\sahil\\Projects\\burnout\\test\\client\\src\\components\\TestSpace.js":"14","C:\\Users\\sahil\\Projects\\burnout\\test\\client\\src\\actions\\questionActions.js":"15","C:\\Users\\sahil\\Projects\\burnout\\test\\client\\src\\actions\\answerActions.js":"16","C:\\Users\\sahil\\Projects\\burnout\\test\\client\\src\\reducers\\answerReducer.js":"17","C:\\Users\\sahil\\Projects\\burnout\\test\\client\\src\\components\\Quest.js":"18","C:\\Users\\sahil\\Projects\\burnout\\test\\client\\src\\components\\Prog.js":"19","C:\\Users\\sahil\\Projects\\burnout\\test\\client\\src\\Start.js":"20","C:\\Users\\sahil\\Projects\\burnout\\test\\client\\src\\End.js":"21"},{"size":783,"mtime":1609956467518,"results":"22","hashOfConfig":"23"},{"size":362,"mtime":499162500000,"results":"24","hashOfConfig":"23"},{"size":660,"mtime":1609929767581,"results":"25","hashOfConfig":"23"},{"size":406,"mtime":1609177630817,"results":"26","hashOfConfig":"23"},{"size":1238,"mtime":1609931787804,"results":"27","hashOfConfig":"23"},{"size":3437,"mtime":1609929808490,"results":"28","hashOfConfig":"23"},{"size":1475,"mtime":1609929945188,"results":"29","hashOfConfig":"23"},{"size":2339,"mtime":1609339528864,"results":"30","hashOfConfig":"23"},{"size":715,"mtime":1609342475375,"results":"31","hashOfConfig":"23"},{"size":306,"mtime":1609440381784,"results":"32","hashOfConfig":"23"},{"size":392,"mtime":1609967502896,"results":"33","hashOfConfig":"23"},{"size":992,"mtime":1609930500579,"results":"34","hashOfConfig":"23"},{"size":981,"mtime":1609968231782,"results":"35","hashOfConfig":"23"},{"size":3946,"mtime":1609967661812,"results":"36","hashOfConfig":"23"},{"size":758,"mtime":1609967531541,"results":"37","hashOfConfig":"23"},{"size":225,"mtime":1609440273032,"results":"38","hashOfConfig":"23"},{"size":447,"mtime":1609930560673,"results":"39","hashOfConfig":"23"},{"size":2627,"mtime":1609963708784,"results":"40","hashOfConfig":"23"},{"size":2553,"mtime":1609966582996,"results":"41","hashOfConfig":"23"},{"size":1000,"mtime":1609956133170,"results":"42","hashOfConfig":"23"},{"size":1100,"mtime":1609956527202,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1lfn9qo",{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"58"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\sahil\\Projects\\burnout\\test\\client\\src\\index.js",[],"C:\\Users\\sahil\\Projects\\burnout\\test\\client\\src\\reportWebVitals.js",[],["90","91"],"C:\\Users\\sahil\\Projects\\burnout\\test\\client\\src\\App.js",[],"C:\\Users\\sahil\\Projects\\burnout\\test\\client\\src\\store.js",[],"C:\\Users\\sahil\\Projects\\burnout\\test\\client\\src\\components\\AppNavbar.js",[],"C:\\Users\\sahil\\Projects\\burnout\\test\\client\\src\\components\\PlantList.js",["92"],"import React, { Component } from 'react';\r\nimport { Container, ListGroup, ListGroupItem, Button } from 'reactstrap';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\nimport { connect } from 'react-redux';\r\nimport { getPlants, deletePlant} from '../actions/plantActions';\r\nimport PropTypes  from 'prop-types' ;\r\nimport { v4 as uuid } from 'uuid';\r\n\r\n\r\n\r\nclass PlantList extends Component{\r\n\r\n    \r\n    componentDidMount(){\r\n        this.props.getPlants();\r\n    }\r\n\r\n    onDeleteClick=(_id)=>{\r\n        this.props.deletePlant(_id);\r\n    }\r\n\r\n    openPlants=(e)=>{        \r\n        var x = document.getElementById(\"home\");\r\n        if (x.style.display === \"none\") {\r\n        x.style.display = \"block\";\r\n        } else {\r\n        x.style.display = \"none\";\r\n        }\r\n\r\n        x = document.getElementById(\"plants\");        \r\n            x.style.display = \"block\";\r\n        \r\n    };\r\n\r\n    openHome=(e)=>{        \r\n        var x = document.getElementById(\"plants\");\r\n        if (x.style.display === \"none\") {\r\n        x.style.display = \"block\";\r\n        } else {\r\n        x.style.display = \"none\";\r\n        }\r\n\r\n        x = document.getElementById(\"home\");        \r\n            x.style.display = \"block\";\r\n        \r\n    };\r\n\r\n\r\n\r\n    render(){\r\n        const {plants}= this.props.plant;\r\n        return(\r\n            \r\n\r\n\r\n            <Container>\r\n                <div id=\"home\">\r\n                 <Container>\r\n                <h1>Mental Power Test</h1>\r\n                This is a mental power test. We will write some words about the test here for the user \r\n                 <br/>\r\n                xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\r\n                 <br/>\r\n                xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx                                                \r\n                <Button onClick={this.openPlants}>\r\n                Take the Test\r\n                </Button>\r\n                </Container>\r\n                </div>\r\n\r\n\r\n                <div id=\"plants\" style={{display:\"none\"}}>\r\n\r\n                <ListGroup>\r\n                    <TransitionGroup className='plant-group'>\r\n                        {plants.map(({_id, name})=> \r\n                            <CSSTransition key={_id} timeout={500} classNames=\"fade\">\r\n                                <ListGroupItem> \r\n                                    <Button \r\n                                    className=\"remove-btn\"  color=\"danger\" size=\"sm\" \r\n                                        onClick={this.onDeleteClick.bind(this, _id)}>\r\n                                        &times;\r\n                                    </Button>\r\n                                    {name}\r\n                                </ListGroupItem>\r\n                            </CSSTransition>\r\n                        )}\r\n                    </TransitionGroup>\r\n                </ListGroup>\r\n                <Button onClick={this.openHome}>\r\n                Cancel Test\r\n                </Button>\r\n                </div>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nPlantList.propTypes = {\r\n    getPlants: PropTypes.func.isRequired  ,\r\n    deletePlant:PropTypes.func.isRequired, \r\n    plant: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\nplant: state.plant\r\n\r\n});\r\n\r\nexport default connect(mapStateToProps, { getPlants, deletePlant})(PlantList);\r\n\r\n",["93","94"],"C:\\Users\\sahil\\Projects\\burnout\\test\\client\\src\\components\\HomeData.js",["95","96","97"],"import React, { Component } from 'react';\r\nimport { Container, ListGroup, ListGroupItem, Button } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes  from 'prop-types' ;\r\n\r\n\r\n\r\n\r\nclass HomeData extends Component{\r\n    state = {\r\n        home: true\r\n    };\r\n\r\n\r\n    toggle = () => {\r\n        this.setState({\r\n            home: !this.state.home\r\n        });\r\n    };\r\n\r\n    onChange=(e)=>{\r\n        this.setState({[e.target.name]: e.target.value})\r\n        var x = document.getElementById(\"home\");\r\n        if (x.style.display === \"none\") {\r\n        x.style.display = \"block\";\r\n        } else {\r\n        x.style.display = \"none\";\r\n        }\r\n    };\r\n\r\n\r\n    render(){\r\n        \r\n        return(\r\n        <div id=\"home\">\r\n            <Container>\r\n                <h1>Mental Power Test</h1>\r\n            This is a mental power test. We will write some words about the test here for the user \r\n            <br/>\r\n            xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\r\n            <br/>\r\n            xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx                                                \r\n            <Button onClick={this.onChange}>\r\n                Take the Test\r\n            </Button>\r\n            </Container>\r\n        </div>\r\n            \r\n            \r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n\r\n\r\n});\r\n\r\nexport default connect(mapStateToProps, { })(HomeData);\r\n\r\n","C:\\Users\\sahil\\Projects\\burnout\\test\\client\\src\\components\\PlantModal.js",[],"C:\\Users\\sahil\\Projects\\burnout\\test\\client\\src\\actions\\plantActions.js",[],"C:\\Users\\sahil\\Projects\\burnout\\test\\client\\src\\reducers\\index.js",[],"C:\\Users\\sahil\\Projects\\burnout\\test\\client\\src\\actions\\types.js",[],"C:\\Users\\sahil\\Projects\\burnout\\test\\client\\src\\reducers\\plantReducer.js",[],"C:\\Users\\sahil\\Projects\\burnout\\test\\client\\src\\reducers\\questionReducer.js",[],"C:\\Users\\sahil\\Projects\\burnout\\test\\client\\src\\components\\TestSpace.js",[],"C:\\Users\\sahil\\Projects\\burnout\\test\\client\\src\\actions\\questionActions.js",[],"C:\\Users\\sahil\\Projects\\burnout\\test\\client\\src\\actions\\answerActions.js",[],"C:\\Users\\sahil\\Projects\\burnout\\test\\client\\src\\reducers\\answerReducer.js",[],"C:\\Users\\sahil\\Projects\\burnout\\test\\client\\src\\components\\Quest.js",[],"C:\\Users\\sahil\\Projects\\burnout\\test\\client\\src\\components\\Prog.js",[],"C:\\Users\\sahil\\Projects\\burnout\\test\\client\\src\\Start.js",[],"C:\\Users\\sahil\\Projects\\burnout\\test\\client\\src\\End.js",[],{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","severity":1,"message":"103","line":7,"column":16,"nodeType":"104","messageId":"105","endLine":7,"endColumn":20},{"ruleId":"98","replacedBy":"106"},{"ruleId":"100","replacedBy":"107"},{"ruleId":"102","severity":1,"message":"108","line":2,"column":21,"nodeType":"104","messageId":"105","endLine":2,"endColumn":30},{"ruleId":"102","severity":1,"message":"109","line":2,"column":32,"nodeType":"104","messageId":"105","endLine":2,"endColumn":45},{"ruleId":"102","severity":1,"message":"110","line":4,"column":8,"nodeType":"104","messageId":"105","endLine":4,"endColumn":17},"no-native-reassign",["111"],"no-negated-in-lhs",["112"],"no-unused-vars","'uuid' is defined but never used.","Identifier","unusedVar",["111"],["112"],"'ListGroup' is defined but never used.","'ListGroupItem' is defined but never used.","'PropTypes' is defined but never used.","no-global-assign","no-unsafe-negation"]